The ``matrix_mul`` module
===========================

Using ``matrix_mul``
----------------------

Import func from module
        >>> matrix_mul = __import__("100-matrix_mul").matrix_mul

Module docstring:
        >>> m = __import__("100-matrix_mul").__doc__
        >>> len(m) > 1
        True

Function docstring:
        >>> f = __import__("100-matrix_mul").matrix_mul.__doc__
        >>> len(f) > 1
        True

multiply 2 matrices:
        >>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
        [[7, 10], [15, 22]]

m_a is empty:
        >>> print(matrix_mul([[]], [[3, 4], [5, 6]]))
        Traceback (most recent call last):
        ...
        TypeError: m_a can't be empty

m_a and m_b are empty:
        >>> print(matrix_mul([[]], [[]]))
        Traceback (most recent call last):
        ...
        TypeError: m_a can't be empty

no args:
        >>> print(matrix_mul())
        Traceback (most recent call last):
        ...
        TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

one arg:
        >>> print(matrix_mul([[1, 2]]))
        Traceback (most recent call last):
        ...
        TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

pass non-int value:
        >>> print(matrix_mul([["1", 2], [3, "4"]], [[1, 2], [3, 4]]))
        Traceback (most recent call last):
        ...
        TypeError: m_a should contain only integers or floats

row num != col num:
        >>> print(matrix_mul([[1, 2]], [[1, 2]]))
        Traceback (most recent call last):
        ...
        ValueError: m_a and m_b can't be multiplied

mul strings:
        >>> print(matrix_mul("t", "k"))
        Traceback (most recent call last):
        ...
        TypeError: m_a must be a list

mul list of strings:
        >>> print(matrix_mul(["t"], ["k"]))
        Traceback (most recent call last):
        ...
        TypeError: m_a must be a list of lists

mul diff row sizes:
        >>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]]))
        Traceback (most recent call last):
        ...
        TypeError: each row of m_b must be of the same size
