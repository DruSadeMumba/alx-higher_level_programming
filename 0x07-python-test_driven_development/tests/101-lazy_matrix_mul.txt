The ``lazy_matrix_mul`` module
===========================

Using ``lazy_matrix_mul``
----------------------

Import func from module
        >>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

Module docstring:
        >>> m = __import__("101-lazy_matrix_mul").__doc__
        >>> len(m) > 1
        True

Function docstring:
        >>> f = __import__("101-lazy_matrix_mul").lazy_matrix_mul.__doc__
        >>> len(f) > 1
        True

multiply 2 matrices:
        >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
        [[ 7 10]
         [15 22]]

m_a is empty:
        >>> print(lazy_matrix_mul([[]], [[3, 4], [5, 6]]))
        Traceback (most recent call last):
        ...
        ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 0)

m_a and m_b are empty:
        >>> print(lazy_matrix_mul([[]], [[]]))
        Traceback (most recent call last):
        ...
        ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

no args:
        >>> print(lazy_matrix_mul())
        Traceback (most recent call last):
        ...
        TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

one arg:
        >>> print(lazy_matrix_mul([[1, 2]]))
        Traceback (most recent call last):
        ...
        TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

pass non-int value:
        >>> print(lazy_matrix_mul([["2", 4]], [[2, 4]]))
        Traceback (most recent call last):
        ...
        numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('int64')) -> None
