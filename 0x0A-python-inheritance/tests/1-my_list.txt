===========================
The 1-my_list module
===========================

Using MyList
===========================

Importing the module:
	 >>> MyList = __import__("1-my_list").MyList

Module docstring test:
	 >>> m = __import__("1-my_list").__doc__
	 >>> len(m) > 1
	 True

Class docstring test:
	 >>> c = __import__("1-my_list").MyList.__doc__
	 >>> len(c) > 1
	 True

Function docstring test:
	 >>> f = __import__("1-my_list").MyList.print_sorted.__doc__
	 >>> len(f) > 1
	 True

A type test:
	 >>> issubclass(MyList, list)
	 True

	 >>> isinstance(MyList, object)
	 True

	 >>> isinstance(MyList, list)
	 False

Empty list test:
	 >>> l = MyList()
	 >>> l.print_sorted()
	 []

Too many args in func test:
	 >>> l.print_sorted(1)
	 Traceback (most recent call last):
	 ...
	 TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

Sort one number:
     >>> l.append(1)
     >>> print(l)
     [1]

     >>> l.print_sorted()
     [1]

Sort positive numbers test:
	 >>> l.extend([2, 3, 4, 5])
	 >>> print(l)
	 [1, 2, 3, 4, 5]

	 >>> l.print_sorted()
	 [1, 2, 3, 4, 5]

     >>> l = MyList()
     >>> l.extend([5, 4, 3, 2, 1])
     >>> print(l)
     [5, 4, 3, 2, 1]

	 >>> l.print_sorted()
	 [1, 2, 3, 4, 5]

Sort positive and negative numbers test:
	 >>> l.extend([-7, -5])
	 >>> print(l)
	 [5, 4, 3, 2, 1, -7, -5]

	 >>> l.print_sorted()
	 [-7, -5, 1, 2, 3, 4, 5]

Sort negative numbers test:
	 >>> l = MyList()
	 >>> l.extend([-1, -5, -4, -9, -7])
	 >>> print(l)
	 [-1, -5, -4, -9, -7]

	 >>> l.print_sorted()
	 [-9, -7, -5, -4, -1]