The ``1-my_list`` module
===========================

Using ``MyList``
----------------------

Import func from module:
        >>> MyList = __import__("1-my_list").MyList

Module docstring:
        >>> m = __import__("1-my_list").__doc__
        >>> len(m) > 1
        True

Class docstring:
        >>> c = __import__("1-my_list").MyList.__doc__
        >>> len(c) > 1
        True

Function docstring:
        >>> f = __import__("1-my_list").MyList.print_sorted.__doc__
        >>> len(f) > 1
        True

Inheritance:
        >>> issubclass(MyList, list)
        True

Empty list:
        >>> l = MyList()
        >>> l.print_sorted()
        []

Too many args in func:
        >>> l.print_sorted(1)
        Traceback (most recent call last):
        ...
        TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

Sort positive numbers:
        >>> l.extend([1, 5, 4, 9, 7])
        >>> print(l)
        [1, 5, 4, 9, 7]
        >>> l.print_sorted()
        [1, 4, 5, 7, 9]

Sort positive and negative numbers:
        >>> l.extend([-7, -5])
        >>> print(l)
        [1, 5, 4, 9, 7, -7, -5]
        >>> l.print_sorted()
        [-7, -5, 1, 4, 5, 7, 9]

Sort negative numbers:
        >>> l = MyList()
        >>> l.extend([-1, -5, -4, -9, -7])
        >>> print(l)
        [-1, -5, -4, -9, -7]
        >>> l.print_sorted()
        [-9, -7, -5, -4, -1]
